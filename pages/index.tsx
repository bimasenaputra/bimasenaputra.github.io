import { useState } from 'react';
import type { NextPage } from 'next';
import { GetStaticProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import {
  Box,
  Button,
  Heading,
  Modal,
  ModalOverlay,
  SimpleGrid,
  Stack,
  Text,
  useDisclosure,
  useMediaQuery,
} from '@chakra-ui/react';
import { EmailIcon } from '@chakra-ui/icons';
import styles from '../styles/Home.module.css';
import { Navbar, ProjectCard, ProjectDetailLargeModal, ProjectDetailFullModal } from '../components/component';
import type { Project } from '../lib/projects';
import { getProjects } from '../lib/projects';

const Home: NextPage<{projects: Project[]}> = ({ projects }) => {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const [isDesktop] = useMediaQuery('(min-width: 1366px)');
  const determineModal = () => {
    if (isDesktop) {
      return (
        <Modal isOpen={isOpen} size="xl" onClose={onClose} isCentered>
        <ModalOverlay
          bg='rgba(20, 20, 20, 0.7)'
        />
        <ProjectDetailLargeModal
          id={projectObj.id}
          type={projectObj.type} 
          name={projectObj.name}
          duration={projectObj.duration}
          company={projectObj.company}
          photo={projectObj.photo}
          alt={projectObj.alt}
          link={projectObj.link}
          description={projectObj.description}
          technologies={projectObj.technologies}
        />
      </Modal>
      );
    } else {
      return (
        <Modal isOpen={isOpen} size="full" onClose={onClose} scrollBehavior="inside" isCentered>
        <ProjectDetailFullModal
          id={projectObj.id}
          type={projectObj.type}
          name={projectObj.name}
          duration={projectObj.duration}
          company={projectObj.company}
          photo={projectObj.photo}
          alt={projectObj.alt}
          link={projectObj.link}
          description={projectObj.description}
          technologies={projectObj.technologies}
        />
      </Modal>
      );
    }
  };

  const [projectObj, setProjectObj] = useState<Project>({} as Project);
  const handleProjectClick = (project: Project) => {
    setProjectObj(project);
    onOpen();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Bimasena Putra</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Stack spacing={4} align="left" maxW="600px" mt={["20px", "20px", "20px", "60px"]} mb={["60px", "60px", "60px", "120px"]}>
          <Heading as="h1">
            Hiüëã, I&apos;m Bima - A Software Engineer
          </Heading>
          <Text>
            I&apos;m a junior studying computer science üíª at Universitas Indonesia. I have deep interest in tiny machine learning ü§ñ and 3D rendering üåê.
            I was working for Sagara Technology to help them build the backend part for their admin and customer part of car parts store website.
            <br/><br/>
            I plan to build (or join) an edge computer vision platform project and personalized question answering service in the future. 
            If anyone interested in joining my project or idea, i&apos;d be happy to welcome you üëê. I&apos;m also open to any project out there 
            where i can collaborate and contribute. Just text me! üìß 
          </Text>
          <Link href="mailto:bimasenaputra@gmail.com" passHref>
            <Button leftIcon={<EmailIcon />} colorScheme='teal' variant='outline'>
              Send me an email
            </Button>
          </Link>
          <Link href="https://named-foundry-358214.as.r.appspot.com/snippet/create" passHref>
            <Button variant="link">
             Or send anonymous message instead
            </Button>
          </Link>
        </Stack>

        <Box mb="50px">
          <Heading as="h1" mb="2rem">
            My Projects
          </Heading>
          <SimpleGrid columns={[1, 1, 1, 2]} spacingX="30px" spacingY="15px"> 
            {projects.map((project) => (
              <ProjectCard
                onClick={() => handleProjectClick(project)}
                key={project.id}
                company={project.company}  
                name={project.name}
                photo={project.photo}
                alt={project.alt}
              />
            ))}
          </SimpleGrid>

          {determineModal()}

        </Box>
      </main>

      <Navbar />

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getStaticProps = () => {
  const projects: Project[] = getProjects().reverse();

  return {
    props: {
      projects,
    },
  }
}

export default Home
